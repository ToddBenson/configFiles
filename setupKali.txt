
# Change hostname

vi /etc/hostname
vi /etc/hosts
------------------------------------------------------------------------------------------------------

# Terminal

Edit > Profile Preferences
Colors: Uncheck Use transparent background
------------------------------------------------------------------------------------------------------

# Disable screen lock

Top right icon > tools icon > Power
Power Saving > Blank screen: Never
Back arrow
Privacy > Screen Lock > Automatic Screen Lock: Off
------------------------------------------------------------------------------------------------------

# gedit

Preferences
View: Display line numbers, Highlight current line
Editor: Tab width 5, Insert spaces instead of tabs
Color Scheme: Oblivion
------------------------------------------------------------------------------------------------------

# Install VMware Tools

VMware > Virtual Machine > Install VMware Tools > Install
cp /media/cdrom/VMwareTools-<version>.tar.gz /root/
cd /root/
tar zxvf VMwareTools-<version>.tar.gz 
cd vmware-tools-distrib/
./vmware-install.pl 
Accept all the defaults
reboot
------------------------------------------------------------------------------------------------------

Burp Suite


# Jython

www.jython.org/downloads.html
Download Jython Standalone Jar
------------------------------------------------------------------------------------------------------

# Firefox plugins (https://addons.mozilla.org/en-US/firefox/collections/anonymous-ea5ff367908de6c75a8d05682ffa36a1/security-tools/)

Cookies Manager+
FoxyProxy Standard
Live HTTP headers (clone)
User-Agent Switcher
Wappalyzer
Builtwith
Tamper Data
HTML5 Local Storage
Hackbar
LastPass
Grammarly
XSS Me
SQL Inject Me
httprequester

# Firefox proxy

Preferences > Advanced > Network > Settings
Manual proxy configuration
HTTP Proxy: 127.0.0.1
Port: 8080
Use this proxy server for all protocols.
No proxy for: delete anything in here
------------------------------------------------------------------------------------------------------

# Set up

Open Burp
New project on disk > Choose file > burp-project > Save
Name: Base
Next
Use Burp defaults > Start Burp
------------------------------------------------------------------------------------------------------

# Certificate

Open Firefox to http://burp
CA Certificate > Save File
Preferences > Advanced > Certificates > View Certificates > Authorities > Import
Select the certificate that you previously downloaded > Open
Check Trust this CA to identify websites > OK > OK
Restart Firefox
------------------------------------------------------------------------------------------------------

# Slack

https://slack.com/downloads/linux
dpkg --install /root/Downloads/slack-desktop-*.deb
------------------------------------------------------------------------------------------------------


# Create new user

useradd -m <username>
passwd <username>
usermod -a -G sudo <username>
chsh -s /bin/bash <username>
------------------------------------------------------------------------------------------------------

# Rubber Ducky

Ducky Script syntax is simple. Each command resides on a new line and may have options follow. Commands are written
in ALL CAPS. Most commands invoke keystrokes, key-combos or strings of text, while some offer delays or pauses.

REM - Similar to the REM command in Basic and other languages, lines beginning with REM will not be processed. 
DEFAULTDELAY n - defines how long (in milliseconds * 10) to wait between each subsequent command.
DELAY n - creates a momentary pause in the ducky script (in milliseconds * 10) from 1 to 10000.
STRING - processes the text following taking special care to auto-shift. STRING can accept a single or multiple characters.
      a..z A..Z 0..9 !..) `~ += _- ”' :; <, >. ?/ \ |
GUI - Emulates the Windows-Key, sometimes referred to as the Super-key.
MENU - Emulates the App key, sometimes referred to as the menu key or context menu key.
SHIFT - can be used when navigating fields to select text, among other functions. Accept the following:
     DELETE, HOME, INSERT, PAGEUP, PAGEDOWN, WINDOWS, GUI, UPARROW, DOWNARROW, LEFTARROW, RIGHTARROW, TAB
ALT - accepts END, ESC, ESCAPE, F1…F12, Single Char, SPACE, TAB
CTRL - accepts BREAK, PAUSE, F1…F12, ESCAPE, ESC, Single Char 
Arrow Keys - DOWNARROW, UPARROW, LEFTARROW, RIGHTARROW
More Keys - BREAK, PAUSE, CAPSLOCK, DELETE, END, ESC, ESCAPE, HOME, INSERT, NUMLOCK,
PAGEUP, PAGEDOWN, PRINTSCREEN, SCROLLLOCK, SPACE, TAB

For complete ducky script syntax, example payloads and tutorials visit USBRubberDucky.com


Getting Started

1. Write a payload in your text editor of choice
Any standard ASCII text editor can be used, such as notepad, vi, nano, emacs or textedit. For example, open notepad and
write “STRING Hello World” (without quotes). Save the file as mypayload.txt. Reference the Ducky Script on the next page
for syntax details or visit USBRubberDucky.com for example payloads.

2. Encode your payload with the Duck Encoder utility
Download the latest version of duckencoder from USBRubberDucky.com. This cross-platform command line Java app
encodes the ASCII text file into a binary ready to be processed by the USB Rubber Ducky.
java -jar duckencode.jar -i mypayload.txt -o inject.bin Usage:

3. Copy the encoded payload to the Micro SD card
Place the inject.bin file created by the Duck Encoder on the root of the Micro SD card. Your payload is now ready.

4. Insert the Micro SD card into the USB Rubber Ducky
Slide the Micro SD card completely into the reader on the USB Rubber Ducky. The card will rest flush with the board.

5. Plug the USB Rubber Ducky into your target PC
The USB Rubber Ducky will be recognized as a keyboard and automatically begin executing your payload. In the example
above the text "Hello World" is typed. Press the micro button above the Micro SD card slot to repeat the payload.

Alternatively a cloud based Ducky Script editor and Duck Encoder can be found at USBRubberDucky.com
------------------------------------------------------------------------------------------------------

# Lan Turtle

IP Address: 172.16.84.1

Default username - root
Defaulr password - sh3llz

Setup autoSSH
------------------------------------------------------------------------------------------------------

# WiFi Pineapple

IP Address: 172.16.42.1

Connect Pineapple to the computer
Run /opt/pineapple/wp6.sh

Setup autoSSH
------------------------------------------------------------------------------------------------------

# KeyLama

Press vmp to exit logging mode
------------------------------------------------------------------------------------------------------

# Git

To update a clone 'git fetch'

Github – create new project

     1. Git init
     2. Git add .
     3. Git commit –m “First Commit”
     4. Create repository on github
     5. Git remote add origin <repoURL>
     6. Git remote –v
     7. Git push origin master 

Github – Commit 

     1. Git status
     2. Git add .
     3. Git commit –m “<message>”
     4. Git push

Github – create branch

Create the branch on your local machine and switch in this branch :
$ git checkout -b [name_of_your_new_branch]

Push the branch on github :
$ git push origin [name_of_your_new_branch]

When you want to commit something in your branch, be sure to be in your branch.

You can see all branches created by using :
$ git branch

Which will show :
* approval_messages
  master
  master_clean

Add a new remote for your branch :
$ git remote add [name_of_your_remote] 

Push changes from your commit into your branch :
$ git push [name_of_your_new_remote] [name_of_your_branch]

Update your branch when the original branch from official repository has been updated :
$ git fetch [name_of_your_remote]

Then you need to apply to merge changes, if your branch is derivated from develop you need to do :
$ git merge [name_of_your_remote]/develop

Delete a branch on your local filesystem :
$ git branch -d [name_of_your_new_branch]

To force the deletion of local branch on your filesystem :
$ git branch -D [name_of_your_new_branch]

Delete the branch on github :
$ git push origin :[name_of_your_new_branch]
------------------------------------------------------------------------------------------------------

# SSH
ssh-keygen                                       Create new keys

/etc/ssh/sshd_config                             Edit config file
PermitRootLogin yes                              Change to yes
AuthorizedKeysFile                               Uncomment

service ssh start                                Start ssh
netstat -antp | grep ssh                         Verify the service is running
update-rc.d ssh enable                           Enable ssh to start at boot time
update-rc.d ssh disable                          Disable ssh from starting at boot time
ssh root@targetIP                                SSH to server on standard port
ssh root@targetIP -p 2222                        SSH to server on non-stardard port (2222)
ssh root@targetIP -X
------------------------------------------------------------------------------------------------------
